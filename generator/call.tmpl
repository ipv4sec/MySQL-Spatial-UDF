my_bool ${name}_init(UDF_INIT *initid,UDF_ARGS *args,char *message)
{
	DEBUG("${name}_init");

% set count [llength $fparams]
	if (args->arg_count != ${count}) {
		strcpy(message,"Wrong # arguments");
		return 1;
	}
% set pos 0	
% foreach fparam $fparams {
%	set type [lindex $fparam 2]
	args->arg_type[${pos}] = ${type};
%   incr pos
% }	
	initid->max_length= 0xFFFFFF;
	msudf_init(initid);
	return 0;
}

void ${name}_deinit(UDF_INIT *initid)
{
	DEBUG("${name}_deinit");
	msudf_deinit(initid);
}

char *${name}(UDF_INIT *initid,UDF_ARGS *args, char *buf,
	unsigned long *length, char *is_null, char *error)
{
	char *result;
	GEOSGeom geom2;
% set pnames {}
% foreach fparam $fparams {
%	set type [lindex $fparam 0]
%   set pname [lindex $fparam 1]
%   lappend pnames $pname
	${type} ${pname}; 
% }
%   set pnames [join $pnames ","]
	DEBUG("${name}");

	geom1 = msudf_getGeometry((unsigned char *)args->args[0],args->lengths[0]);	
	if (geom1 == NULL) {
		strcpy(error,"Invalid geometry.");
		*is_null = 1;
		return NULL;
	}

% set i 0	
% foreach fparam $fparams {
%	set cnv [lindex $fparam 3]
%   set pname [lindex $fparam 1]
%   if {$cnv != "" } {
	${pname} = $cnv args->args[${i}] ;
%   }	
%   incr i
% }

	geom2 = ${call}(${pnames});
	
	if (geom2 != NULL) {
		GEOSSetSRID(geom2,GEOSGetSRID(geom1));
		result = msudf_returnGeometry(initid,length,geom2);
		GEOSGeom_destroy(geom1);
		GEOSGeom_destroy(geom2);
		return result;
	} else {
		GEOSGeom_destroy(geom1);
		*is_null = 1;
		return NULL;
	}
}


